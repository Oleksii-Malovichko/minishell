void	handle_redirection(char *cmd, int *status)
{
	int		file_fd;
	char	*filename;
	int		i = 0;

	while (cmd[i]) // Идём по строке и обрабатываем все перенаправления
	{
		if (cmd[i] == '<' || cmd[i] == '>')
		{
			if (cmd[i] == '<' && cmd[i + 1] == '<') // heredoc `<<`
			{
				i += 2;
				filename = get_filename(&cmd[i]);
				if (filename)
				{
					handle_heredoc(filename);
					free(filename);
				}
			}
			else if (cmd[i] == '>' && cmd[i + 1] == '>') // append `>>`
			{
				i += 2;
				filename = get_filename(&cmd[i]);
				if (filename)
				{
					file_fd = open(filename, O_WRONLY | O_CREAT | O_APPEND, 0644);
					if (file_fd == -1)
					{
						perror("open");
						*status = 1;
						free(filename);
						return ;
					}
					dup2(file_fd, STDOUT_FILENO);
					close(file_fd);
					free(filename);
				}
			}
			else if (cmd[i] == '>') // truncate `>`
			{
				i++;
				filename = get_filename(&cmd[i]);
				if (filename)
				{
					file_fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, 0644);
					if (file_fd == -1)
					{
						perror("open");
						*status = 1;
						free(filename);
						return ;
					}
					dup2(file_fd, STDOUT_FILENO);
					close(file_fd);
					free(filename);
				}
			}
			else if (cmd[i] == '<') // input `<`
			{
				i++;
				filename = get_filename(&cmd[i]);
				if (filename)
				{
					file_fd = open(filename, O_RDONLY);
					if (file_fd == -1)
					{
						perror("open");
						*status = 1;
						free(filename);
						return ;
					}
					dup2(file_fd, STDIN_FILENO);
					close(file_fd);
					free(filename);
				}
			}
		}
		i++;
	}
}